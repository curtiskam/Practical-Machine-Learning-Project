## load libraries
library(caret)
## download data files
trainFile <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
trainFileName <- "trainingdata.csv"
testFile <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
testFileName <- "testdata.csv"
download.file(trainFile, destfile=trainFileName)
download.file(testFile, destfile=testFileName)
## Read data sets into data frames
trainData <- read.csv("trainingdata.csv")
testData <- read.csv("testdata.csv")
## Clean the train data data by removing all NA
trainData <- trainData[, colSums(is.na(trainData)) == 0]
## Partition TrainData to create a training set and a test set within the training data
set.seed(333) # For reproducibile purpose
inTrain <- createDataPartition(trainData$classe, p=0.70, list=F)
trainSet <- trainData[inTrain, ]
testSet <- trainData[-inTrain, ]
## Train rpart Tree
modFitRpart <-  train(classe ~ ., data=trainSet, method="rpart")
## load libraries
library(caret)
## download data files
trainFile <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
trainFileName <- "trainingdata.csv"
testFile <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
testFileName <- "testdata.csv"
download.file(trainFile, destfile=trainFileName)
download.file(testFile, destfile=testFileName)
## Read data sets into data frames
trainData <- read.csv("trainingdata.csv")
testData <- read.csv("testdata.csv")
## Clean the train data data by removing all NA
trainData <- trainData[, colSums(is.na(trainData)) == 0]
#Remove vriables with little variance
smallVariance <- nearZeroVar(trainData, saveMetrics=TRUE)
trainData <- trainData[,nzv$nzv==FALSE]
##set testData columns equal to trainData columns
goodColumns <- colnames(trainData)
testData <- testData[goodColumns]
## Partition TrainData to create a training set and a test set within the training data
set.seed(333) # For reproducibile purpose
inTrain <- createDataPartition(trainData$classe, p=0.70, list=F)
trainSet <- trainData[inTrain, ]
testSet <- trainData[-inTrain, ]
## Train rpart Tree
modFitRpart <-  train(classe ~ ., data=trainSet, method="rpart")
library(caret)
library(randomForest)
library(e1071)
library(rattle)
library(knitr)
loadPakage("rattle")
loadPackage("rattle")
loadpackage("rattle")
install.packages("rattle")
install.packages("knitr")
library(caret)
library(randomForest)
library(e1071)
library(rattle)
library(knitr)
trainFile <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
trainFileName <- "trainingdata.csv"
testFile <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
testFileName <- "testdata.csv"
download.file(trainFile, destfile=trainFileName)
download.file(testFile, destfile=testFileName)
trainData <- read.csv("trainingdata.csv")
testData <- read.csv("testdata.csv")
trainData <- trainData[, colSums(is.na(trainData)) == 0]
smallVariance <- nearZeroVar(trainData, saveMetrics=TRUE)
trainData <- trainData[,smallVariance$smallVariance==FALSE]
set.seed(333)
inTrain <- createDataPartition(trainData$classe, p=0.70, list=F)
trainSet <- trainData[inTrain, ]
testSet <- trainData[-inTrain, ]
modFitRpart <-  train(classe ~ ., data=trainSet, method="rpart")
inTrain <- createDataPartition(trainData$classe, p=0.70, list=FALSE)
inTrain <- createDataPartition(trainData$classe, p=0.70, list=FALSE)
trainData <- read.csv("trainingdata.csv")
testData <- read.csv("testdata.csv")
trainData <- trainData[, colSums(is.na(trainData)) == 0]
trainData <- read.csv("trainingdata.csv")
** Remove vriables with little variance **
smallVariance <- nearZeroVar(trainData, saveMetrics=TRUE)
trainData <- trainData[,smallVariance$smallVariance==FALSE]
trainData <- read.csv("trainingdata.csv")
testData <- read.csv("testdata.csv")
## load libraries
library(caret)
library(randomForest)
library(e1071)
library(rattle)
library(knitr)
## download data files
trainFile <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
trainFileName <- "trainingdata.csv"
testFile <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
testFileName <- "testdata.csv"
download.file(trainFile, destfile=trainFileName)
download.file(testFile, destfile=testFileName)
## Read data sets into data frames
trainData <- read.csv("trainingdata.csv")
testData <- read.csv("testdata.csv")
## Clean the train data data by removing all NA
trainData <- trainData[, colSums(is.na(trainData)) == 0]
##Remove vriables with little variance **
smallVariance <- nearZeroVar(trainData, saveMetrics=TRUE)
trainData <- trainData[,smallVariance$smallVariance==FALSE]
trainData <- read.csv("trainingdata.csv")
## Clean the train data data by removing all NA
trainData <- trainData[, colSums(is.na(trainData)) == 0]
##Remove vriables with little variance **
smallVariance <- nearZeroVar(trainData, saveMetrics=TRUE)
trainData <- trainData[,smallVariance$smallVariance==FALSE]
trainData <- read.csv("trainingdata.csv")
##Remove vriables with little variance **
smallVariance <- nearZeroVar(trainData, saveMetrics=TRUE)
trainData <- trainData[,smallVariance$smallVariance==FALSE]
testData <- read.csv("testdata.csv")
trainData <- read.csv("trainingdata.csv")
set.seed(333) # For reproducibile purpose
inTrain <- createDataPartition(trainData$classe, p=0.70, list=F)
trainSet <- trainData[inTrain, ]
testSet <- trainData[-inTrain, ]
## Train Decsion Tree
modFitRpart <-  train(classe ~ ., data=trainSet, method="rpart",  preProc = c("center", "scale")
)
## Train Random Forest Tree
modFitRF <- train(classe ~ ., data=trainSet, method="rf" ,  preProc = c("center", "scale"))
